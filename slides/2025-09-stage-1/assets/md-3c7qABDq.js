import{b as i,o as a,w as r,g as e,ad as o,v as f,x as u,T as l}from"./modules/vue-CPxgpvF3.js";import{I as c}from"./slidev/default-D6SWMAvl.js";import{u as m,f as p}from"./slidev/context-CmNQZcCi.js";import"./index-C-pyBNfw.js";import"./modules/shiki-D5RmdL5t.js";const g={__name:"2025-09-stage-1.md__slidev_7",setup(d){const{$clicksContext:s,$frontmatter:n}=m();return s.setup(),(h,t)=>(a(),i(c,f(u(l(p)(l(n),6))),{default:r(()=>[...t[0]||(t[0]=[e("h1",null,"What is promise adoption",-1),e("ul",null,[e("li",null,[o("If "),e("code",null,"x"),o(" is a promise, adopt its state "),e("sup",{class:"footnote-ref"},[e("a",{href:"#fn1",id:"fnref1"},"[1]")]),o(": "),e("ol",null,[e("li",null,[o("If "),e("code",null,"x"),o(" is pending, "),e("code",null,"promise"),o(" must remain pending until "),e("code",null,"x"),o(" is fulfilled or rejected.")]),e("li",null,[o("If/when "),e("code",null,"x"),o(" is fulfilled, fulfill "),e("code",null,"promise"),o(" with the same value.")]),e("li",null,[o("If/when "),e("code",null,"x"),o(" is rejected, reject "),e("code",null,"promise"),o(" with the same reason.")])])])],-1),e("hr",{class:"footnotes-sep"},null,-1),e("section",{class:"footnotes"},[e("ol",{class:"footnotes-list"},[e("li",{id:"fn1",class:"footnote-item"},[e("p",null,[o("Generally, it will only be known that "),e("code",null,"x"),o(" is a true promise if it comes from the current implementation. This clause allows the use of implementation-specific means to adopt the state of known-conformant promises. "),e("a",{href:"#fnref1",class:"footnote-backref"},"↩︎")])])])],-1)])]),_:1},16))}};export{g as default};
