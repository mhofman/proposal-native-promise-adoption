import{_ as r}from"./slidev/VClicks-CHs5FdAI.js";import{b as u,o as p,w as t,g as e,e as m,ad as l,v as d,x as c,T as n}from"./modules/vue-KpmQVp8D.js";import{I as _}from"./slidev/default-C7_tJvvB.js";import{u as f,f as v}from"./slidev/context-Bb4dRQBA.js";import"./index-CQvZHhTf.js";import"./modules/shiki-DsC3kT1E.js";const R={__name:"2025-09-stage-1.md__slidev_10",setup(h){const{$clicksContext:s,$frontmatter:i}=f();return s.setup(),(b,o)=>{const a=r;return p(),u(_,d(c(n(v)(n(i),9))),{default:t(()=>[o[1]||(o[1]=e("h1",null,"Web compatibility",-1)),o[2]||(o[2]=e("p",null,"Zone.js",-1)),m(a,{depth:"2"},{default:t(()=>[...o[0]||(o[0]=[e("ul",null,[e("li",null,[l("Relies on transpiling async code to avoid native promise adoption in "),e("code",null,"await"),e("ul",null,[e("li",null,[l("a narrow "),e("code",null,"return"),l(" only solution should be safe")])])]),e("li",null,[l("Replaces global "),e("code",null,"Promise"),l(" with "),e("code",null,"ZoneAwarePromise"),l(" (implemented as a thenable)")]),e("li",null,[l("Replaces "),e("code",null,"Promise.prototype.then"),l(" to assimilate native promises into their zone aware promises "),e("ul",null,[e("li",null,[l("Covers explicit calls to "),e("code",null,"promise.then")]),e("li",null,"Doesn’t expect to intercept native promise assimilating another native promise")])]),e("li",null,[l("262 spec does not use "),e("code",null,"PromiseCapability"),l("’s "),e("code",null,"[[Resolve]]"),l(" with another native promise")]),e("li",null,[l("–> Promise adoption in resolve functions should be compatible "),e("ul",null,[e("li",null,"None-the-less, should measure in the wild")])])],-1)])]),_:1})]),_:1},16)}}};export{R as default};
